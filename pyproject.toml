[tool.poetry]
name = "musicmood"
version = "0.1.0"
description = "Mood-based music recommendation system with 3-agent AI architecture"
authors = ["Portfolio Project"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
sqlalchemy = "^2.0.35"
psycopg2-binary = "^2.9.10"
redis = "^5.2.0"
langchain = "^0.3.7"
langchain-community = "^0.3.7"
langchain-ollama = "^0.2.0"
transformers = "^4.46.0"
sentence-transformers = "^3.3.0"
spotipy = "^2.24.0"
python-dotenv = "^1.0.1"
pydantic = "^2.9.2"
pydantic-settings = "^2.6.1"
alembic = "^1.14.0"
httpx = "^0.27.2"
python-multipart = "^0.0.17"
streamlit = "^1.40.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.24.0"
black = "^24.10.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
mypy = "^1.13.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Pytest Configuration
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

# Black Configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

# isort Configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

# MyPy Configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

# Coverage Configuration
[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
