"""Initial migration with User, MoodEntry, PlaylistRecommendation models

Revision ID: 191bb54848e3
Revises:
Create Date: 2025-10-21 16:16:39.437436

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '191bb54848e3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('spotify_access_token', sa.String(length=500), nullable=True),
    sa.Column('spotify_refresh_token', sa.String(length=500), nullable=True),
    sa.Column('spotify_token_expires_at', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('idx_user_username_active', 'users', ['username', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('mood_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mood_text', sa.Text(), nullable=False),
    sa.Column('detected_emotion', sa.String(length=50), nullable=False),
    sa.Column('emotion_scores', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('weather_data', sa.JSON(), nullable=True),
    sa.Column('time_of_day', sa.String(length=20), nullable=False),
    sa.Column('location_context', sa.String(length=100), nullable=True),
    sa.Column('activity_context', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mood_emotion_confidence', 'mood_entries', ['detected_emotion', 'confidence_score'], unique=False)
    op.create_index('idx_mood_time_of_day', 'mood_entries', ['time_of_day'], unique=False)
    op.create_index('idx_mood_user_created', 'mood_entries', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_mood_entries_detected_emotion'), 'mood_entries', ['detected_emotion'], unique=False)
    op.create_index(op.f('ix_mood_entries_id'), 'mood_entries', ['id'], unique=False)
    op.create_index(op.f('ix_mood_entries_user_id'), 'mood_entries', ['user_id'], unique=False)
    op.create_table('playlist_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mood_entry_id', sa.Integer(), nullable=False),
    sa.Column('playlist_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('track_ids', sa.JSON(), nullable=False),
    sa.Column('track_details', sa.JSON(), nullable=False),
    sa.Column('genre_distribution', sa.JSON(), nullable=True),
    sa.Column('audio_features_avg', sa.JSON(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=False),
    sa.Column('agent_used', sa.String(length=50), nullable=False),
    sa.Column('feedback_score', sa.Integer(), nullable=True),
    sa.Column('was_listened', sa.Boolean(), nullable=False),
    sa.Column('spotify_playlist_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mood_entry_id'], ['mood_entries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_playlist_agent', 'playlist_recommendations', ['agent_used'], unique=False)
    op.create_index('idx_playlist_feedback', 'playlist_recommendations', ['feedback_score'], unique=False)
    op.create_index('idx_playlist_mood_entry', 'playlist_recommendations', ['mood_entry_id'], unique=False)
    op.create_index('idx_playlist_user_created', 'playlist_recommendations', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_playlist_recommendations_id'), 'playlist_recommendations', ['id'], unique=False)
    op.create_index(op.f('ix_playlist_recommendations_mood_entry_id'), 'playlist_recommendations', ['mood_entry_id'], unique=False)
    op.create_index(op.f('ix_playlist_recommendations_user_id'), 'playlist_recommendations', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_playlist_recommendations_user_id'), table_name='playlist_recommendations')
    op.drop_index(op.f('ix_playlist_recommendations_mood_entry_id'), table_name='playlist_recommendations')
    op.drop_index(op.f('ix_playlist_recommendations_id'), table_name='playlist_recommendations')
    op.drop_index('idx_playlist_user_created', table_name='playlist_recommendations')
    op.drop_index('idx_playlist_mood_entry', table_name='playlist_recommendations')
    op.drop_index('idx_playlist_feedback', table_name='playlist_recommendations')
    op.drop_index('idx_playlist_agent', table_name='playlist_recommendations')
    op.drop_table('playlist_recommendations')
    op.drop_index(op.f('ix_mood_entries_user_id'), table_name='mood_entries')
    op.drop_index(op.f('ix_mood_entries_id'), table_name='mood_entries')
    op.drop_index(op.f('ix_mood_entries_detected_emotion'), table_name='mood_entries')
    op.drop_index('idx_mood_user_created', table_name='mood_entries')
    op.drop_index('idx_mood_time_of_day', table_name='mood_entries')
    op.drop_index('idx_mood_emotion_confidence', table_name='mood_entries')
    op.drop_table('mood_entries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username_active', table_name='users')
    op.drop_index('idx_user_email_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
